# -*- coding: utf-8 -*-

import re
import time
from copy import deepcopy

from config import (
     IsDebug, IsDeepDebug, IsTrace, IsPrintExceptions, IsWithPrintErrors, IsWithExtra, 
     errorlog, print_to, print_exception,
    )

from app.settings import DEFAULT_LANGUAGE, DEFAULT_PARSE_MODE, NO_RESULTS, NO_KEY, RCODES
from app.dialogs.start import help
from app.handlers import *

from app import dbs

# Ответ "Не знаю"
_with_extra = IsWithExtra

# -------------------
# Тревожность Тейлора
# -------------------

_TEST_NAME = 'T8'
_QCOUNT = 60

_QUESTIONS = {
    'ru': (
"""
1. Я могу долго работать, не уставая
""",
"""
2. Я всегда выполняю свои обещания, несмотря на то, удобно мне это или нет
""",
"""
3. Обычно руки и ноги у меня тёплые
""",
"""
4. У меня редко болит голова
""",
"""
5. Я уверен в своих силах
""",
"""
6. Ожидание меня нервирует
""",
"""
7. Иногда мне кажется, что я ни на что не годен
""",
"""
8. Обычно я чувствую себя вполне счастливым
""",
"""
9. Я не могу сосредоточиться на чём-нибудь одном
""",
"""
10. В детстве я всегда немедленно и безропотно выполнял всё то, что мне поручали
""",
"""
11. Раз в месяц или чаще у меня бывает расстройство желудка
""",
"""
12. Я часто ловлю себя на том, что меня что-то тревожит
""",
"""
13. Я думаю, что я не более нервный, чем большинство других людей
""",
"""
14. Я не слишком застенчив
""",
"""
15. Жизнь для меня почти всегда связана с большим напряжением
""",
"""
16. Иногда бывает, что я говорю о вещах, в которых не разбираюсь
""",
"""
17. Я краснею не чаще, чем другие
""",
"""
18. Я часто расстраиваюсь из-за пустяков
""",
"""
19. Я редко замечаю у себя сердцебиение или одышку
""",
"""
20. Не все люди, которых я знаю, мне нравятся
""",
"""
21. Я не могу уснуть, если меня что-то тревожит
""",
"""
22. Обычно я спокоен и меня нелегко расстроить
""",
"""
23. Меня часто мучают ночные кошмары
""",
"""
24. Я склонен всё принимать слишком серьёзно
""",
"""
25. Когда я волнуюсь, у меня усиливается потливость
""",
"""
26. У меня беспокойный и прерывистый сон
""",
"""
27. В играх я предпочитаю скорее выигрывать, чем проигрывать
""",
"""
28. Я более чувствителен, чем большинство других людей
""",
"""
29. Бывает, что нескромные шутки и остроты вызывают у меня смех
""",
"""
30. Я хотел бы быть так же доволен своей жизнью, как, вероятно, довольны другие
""",
"""
31. Мой желудок сильно беспокоит меня
""",
"""
32. Я постоянно озабочен своими материальными и служебными делами
""",
"""
33. Я настороженно отношусь к некоторым людям, хотя знаю, что они не могут причинить мне вреда
""",
"""
34. Мне иногда кажется, что передо мной накоплены такие трудности, которые мне не преодолеть
""",
"""
35. Я легко прихожу в замешательство
""",
"""
36. Иногда я становлюсь настолько возбуждённым, что это мешает мне заснуть
""",
"""
37. Я предпочитаю уклоняться от конфликтов и затруднительных положений
""",
"""
38. У меня бывают приступы тошноты и рвоты
""",
"""
39. Я никогда не опаздывал на свидание или работу
""",
"""
40. Иногда я определённо чувствую себя бесполезным
""",
"""
41. Иногда мне хочется выругаться
""",
"""
42. Почти всегда я испытываю тревогу в связи с чем-либо или с кем-либо
""",
"""
43. Меня беспокоят возможные неудачи
""",
"""
44. Я часто боюсь, что вот-вот покраснею
""",
"""
45. Меня нередко охватывает отчаяние
""",
"""
46. Я – человек нервный и возбуждающийся
""",
"""
47. Я часто замечаю, что мои руки дрожат, когда я пытаюсь что-нибудь сделать
""",
"""
48. Я почти всегда испытываю чувство голода
""",
"""
49. Мне не хватает уверенности в себе
""",
"""
50. Я легко потею даже в прохладные дни
""",
"""
51. Я часто мечтаю о таких вещах, о которых лучше никому не рассказывать
""",
"""
52. У меня очень редко болит живот
""",
"""
53. Я считаю, что мне очень трудно сосредоточиться на задании или работе
""",
"""
54. У меня бывают периоды такого сильного беспокойства, что я не могу долго усидеть на одном месте
""",
"""
55. Я всегда отвечаю на письма сразу после прочтения
""",
"""
56. Я легко расстраиваюсь
""",
"""
57. Я практически никогда не краснею
""",
"""
58. У меня гораздо меньше различных опасений и страхов, чем у моих друзей и знакомых
""",
"""
59. Бывает, что я откладываю на завтра то, что следует сделать сегодня
""",
"""
60. Обычно я работаю с большим напряжением
""",
), 
    'uk': (
"""
1. Я можу працювати довго, не втомлюючись
""",
"""
2. Я завжди виконую свої обіцянки, не зважаючи, зручно мені це, чин ні
""",
"""
3. Зазвичай руки і ноги у мене теплі
""",
"""
4. У мене рідко болить голова
""",
"""
5. Я впевнений у своїх силах
""",
"""
6. Очікування мене нервує
""",
"""
7. Іноді мені здається, що я ні на що не здатен
""",
"""
8. Зазвичай я почуваюсь цілком щасливим
""",
"""
9. Я не можу зосередитися на чомусь одному
""",
"""
10. В дитинстві я завжди негайно і покірно виконував все, що мені доручали
""",
"""
11. Раз на місяць чи частіше у мене буває розлад шлунку
""",
"""
12. Я часто ловлю себе на тому, що мене щось непокоїть
""",
"""
13. Я думаю, що я не більш нервовий, ніж більшість інших людей
""",
"""
14. Я не надто сором’язливий
""",
"""
15. Життя для мене майже завжди пов’язане з великим напруженням
""",
"""
16. Іноді буває так, що я кажу про речі, на яких не знаюсь
""",
"""
17. Я червонію не частіше, ніж інші
""",
"""
18. Я часто засмучуюся через дрібниці
""",
"""
19. Я рідко помічаю у себе серцебиття чи задишку
""",
"""
20. Не всі люди, яких я знаю, мені подобаються
""",
"""
21. Я не можу заснути, коли мене щось непокоїть
""",
"""
22. Зазвичай я спокійний, і мене нелегко засмутити
""",
"""
23. Мене часто турбують нічні жахіття
""",
"""
24. Я схильний все сприймати занадто серйозно
""",
"""
25. Коли я хвилююся, у мене посилюється потіння
""",
"""
26. У мене неспокійний і переривчастий сон
""",
"""
27. В іграх я волію швидше вигравати, ніж програвати
""",
"""
28. Я більш чутливий, ніж більшість інших людей
""",
"""
29. Буває, що нескромні жарти викликають у мене сміх
""",
"""
30. Я хотів би бути таким же задоволеним своїм життям, як, мабуть, задоволені інші
""",
"""
31. Мій шлунок сильно непокоїть мене
""",
"""
32. Я постійно стурбований своїми матеріальними і службовими справами
""",
"""
33. Я насторожено ставлюся до деяких людей, хоча знаю, що вони не можуть завдати мені шкоди
""",
"""
34. Мені іноді здається, що переді мною накопичені такі труднощі, які мені не подолати
""",
"""
35. Я легко бентежуся
""",
"""
36. Іноді я стаю настільки збудженим, що це заважає мені заснути
""",
"""
37. Я волію ухилятися від конфліктів і скрутних ситуацій
""",
"""
38. У мене бувають напади нудоти і блювання
""",
"""
39. Я ніколи не запізнююсь на побачення чи роботу
""",
"""
40. Іноді я однозначно відчуваю себе непотрібним
""",
"""
41. Іноді мені хочеться вилаятися
""",
"""
42. Майже завжди я відчуваю занепокоєння у зв’язку з чимось чи кимось
""",
"""
43. Мене турбують можливі невдачі
""",
"""
44. Я часто боюся, що ось-ось почервонію
""",
"""
45. Мене нерідко охоплює відчай
""",
"""
46. Я людина нервова і збудлива
""",
"""
47. Я часто помічаю, що мої руки дрижать, коли я намагаюся що-небудь зробити
""",
"""
48. Я майже завжди відчуваю голод
""",
"""
49. Мені не вистачає впевненості у собі
""",
"""
50. Я легко потію навіть у прохолодні дні
""",
"""
51. Я часто мрію про такі речі, про які краще нікому не розповідати
""",
"""
52. У мене дуже рідко болить живіт
""",
"""
53. Я вважаю, що мені дуже важко зосередитися на завданні чи роботі
""",
"""
54. У мене бувають періоди такого сильного занепокоєння, що я не можу всидіти на одному місці
""",
"""
55. Я завжди відповідаю на листи одразу після того, як їх прочитаю
""",
"""
56. Я легко засмучуюся
""",
"""
57. Я практично ніколи не червонію
""",
"""
58. У мене набагато менше різних побоювань та страхів, ніж у моїх друзів та знайомих
""",
"""
59. Буває, що я відкладаю на завтра те, що має бути зроблено сьогодні
""",
"""
60. Зазвичай я працюю з великим напруженням
""",
),
}

_ANSWERS = {
    'ru': [['Да', '%s.%s:1'], ['Нет', '%s.%s:-1']],
    'uk': [['Так', '%s.%s:1'], ['Ні', '%s.%s:-1']],
}

_no_ext_questions = ()

_EXT_ANSWERS = {
    'ru': [['Не знаю', '%s.%s:0']],
    'uk': [['Не знаю', '%s.%s:0']],
}

_RESULTS = {
    'ru': {
        '0' : (([], [], [2, 10, 55]), ([], [], [16, 20, 27, 29, 41, 51, 59])),
        '1' : (([], [], [6, 7, 9, 11, 12, 13, 15, 18, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 60]), ([], [], [1, 3, 4, 5, 8, 14, 17, 19, 22, 39, 43, 52, 57, 58])),
    },
    'uk': {
        '0' : (([], [], [2, 10, 55]), ([], [], [16, 20, 27, 29, 41, 51, 59])),
        '1' : (([], [], [6, 7, 9, 11, 12, 13, 15, 18, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 60]), ([], [], [1, 3, 4, 5, 8, 14, 17, 19, 22, 39, 43, 52, 57, 58])),
    },
}

_MODE_CONTROL = (2, 10, 55, 16, 20, 27, 29, 41, 51, 59)

_CONCLUSIONS = {
    'ru' : {
        '0' : ('Искренность', [
            (1, 'Высокая искренность'), 
            (3, 'Средняя искренность'), 
            (7, 'Низкая искренность (ответы ненадёжные)')
        ]),
        '1' : ('Тревожность', [
            (5, 'Низкий уровень тревоги'), 
            (15, 'Средний (с тенденцией к низкому) уровень тревоги'), 
            (25, 'Средний (с тенденцией к высокому) уровень тревоги'), 
            (40, 'Высокий уровень тревоги'), 
            (50, 'Очень высокий уровень тревоги'),
        ]),
    },
    'uk' : {
        '0' : ('Нещирість',   [(1, 'Высокая искренность'), (3, 'Средняя искренность'), (7, 'Низкая искренность (ответы ненадёжные)')]),
        '1' : ('Тревожность', [(5, 'Виявлено низький рівень тривоги'), (15, 'Виявлено середній (з тенденцією до низького) рівень тривоги'), (25, 'Виявлено середній (з тенденцією до високого) рівень тривоги'), (40, 'Виявлено високий рівень тривоги'), (50, 'Виявлено дуже високий рівень тривоги'),]),
    },
}

_HEADERS = {
    'ru': 
"""
Ответьте на каждый вопрос «да» или «нет». Дайте ответ, который первым приходит в голову. Отвечайте на все вопросы подряд, ничего не пропуская.
""",
    'uk': 
"""
На кожне запитання дайте відповідь "так" чи "ні". Дайте відповідь, яка першою спаде на думку. Відповідайте на всі запитання по черзі, нічого не пропускаючи.
""",
}

_WARNINGS = {
    'ru': (
"""
Внимание, предоставленные данные выглядят недостоверными, рекомендуется быть более искренним в ответах или обратиться к специалисту!
""",
), 
    'uk': (
"""
Увага, надані відповіді видаються не надто достовірними; рекомендується бути більш щирим у відповідях або звернутися до фахівця!
""",
),
}

_FINISH = {
    'ru': (
"""
Завершение диалога.
""",
"""
Мы благодарим Вас за Ваши ответы.
Желаем Вам крепкого здоровья, и всего Вам доброго!
""",
), 
    'uk': (
"""
Завершення діалогу.
""",
"""
Ми дякуємо Вам за Ваші відповіді.
Бажаємо Вам міцного здоров'я, і всього Вам доброго!
""",
),
}

_results = {}


def test_name():
    return _TEST_NAME

def total_questions():
    return _QCOUNT

def get_question(i, lang, no_eof=None):
    x = _QUESTIONS[lang][i].strip()
    s = '%s.%s.' % (_TEST_NAME, x[-1] == '.' and x[:-1] or x)
    return no_eof and re.sub(r'\n', ' ', s) or s

def get_header(lang, no_eof=None):
    s = '<b>%s</b>' % _HEADERS[lang].strip()
    return no_eof and re.sub(r'\n', ' ', s) or s

def get_finish(storage, name, i, lang, no_eof=None):
    nic = storage.get(name, 'nic', with_decode=True)
    s = '%s%s' % (nic and '%s!\n\n' % nic or _FINISH[lang][0], _FINISH[lang][i].strip())
    return no_eof and re.sub(r'\n', ' ', s) or s

def get_result(storage, name, lang, mode=None):
    global _results

    res = ''
    data = storage.getall(name)
    results = _RESULTS[lang]
    conclusions = _CONCLUSIONS[lang]

    if mode == 1:
        keys = sorted([x for x in results.keys() if x[0].isdigit()])
    else:
        keys = sorted([x for x in results.keys() if x[0] in '0'])

    cs, px = {}, {}

    for p in keys:
        # p: ключ параметра: LF или 0,1...
        x = 0
        for i in range(0, 2):
            # i=0: группа "Да"
            # i=1: группа "Нет"
            for k, sc in enumerate(results[p][i]):
                # k: номер группы 0,1,2
                # sc: номера вопросов (3 группы)
                # score: баллы за ответ на вопрос
                score = k == 2 and 1 or k == 1 and 2 or 3
                for n in sc:
                    # n: номер вопроса
                    key = ('%s.%s' % (_TEST_NAME, n)).encode()
                    v = int(data.get(key, 0))
                    x += i == 0 and v > 0 and score or i == 1 and v < 0 and score or 0

        if mode == 1:
            _results[p] = [x, NO_KEY]

            px[p] = x
            c = ''
            # name: наименование параметра
            # conclusion: характеристика (группа ответов)
            name, conclusion = conclusions[p]
            for i, item in enumerate(conclusion):
                # item: граничное значение параметра
                if x <= item[0]:
                    # c: итоговая оценка по параметру
                    c = item[1]
                    _results[p][1] = c
                    break
            # res: текст результата
            res += '%s. %s: [%s] <b>%s</b>\n' % (p, name, x, c)
        else:
            if x > 0:
                return True

    if mode == 1:
        return res.strip()

def answer(bot, message, command, data=None, logger=None, question=None, **kw):
    """
        Make the step's answer
    """
    lang = kw.get('lang') or DEFAULT_LANGUAGE
    storage = kw.get('storage')
    name = kw.get('name')

    is_run = True

    if question == 0:
        text = get_header(lang)
        bot.send_message(message.chat.id, text, parse_mode=DEFAULT_PARSE_MODE)

    if question == _QCOUNT or (IsDebug and question > 0 and question%10 == 0):
        result = get_result(storage, name, lang, mode=1)
        bot.send_message(message.chat.id, result, parse_mode=DEFAULT_PARSE_MODE)
        is_run = question < _QCOUNT

        if is_run:
            time.sleep(3)

    if question in _MODE_CONTROL and 'query_id' in kw:
        if get_result(storage, name, lang, mode=2) and not storage.get(name, 'warning'):
            text = _WARNINGS[lang][0]

            bot.answer_callback_query(
                kw['query_id'],
                text=text,
                show_alert=True
                )

            storage.set(name, 'warning', 1)
            time.sleep(3)

    if is_run:
        answers = deepcopy(_ANSWERS[lang])
        if _with_extra:
            if question not in _no_ext_questions:
                answers += deepcopy(_EXT_ANSWERS[lang])
        for i, a in enumerate(answers):
            answers[i][1] = answers[i][1] % (_TEST_NAME, question+1)
        send_inline_keyboard(bot, message, answers, get_question(question, lang))

    elif 'query_id' in kw:
        _test_name = test_name()

        dbs.drop_before(_test_name, **kw)
        dbs.save_params(_test_name, _CONCLUSIONS, _results, **kw)

        if kw['query_id']:
            bot.answer_callback_query(
                kw['query_id'],
                text=get_finish(storage, name, 1, lang),
                show_alert=True
                )

            time.sleep(3)

        help(bot, message, logger=logger, mode=1, **kw)

## -------------------------- ##

def lines(text):
    for line in text.split('\n'):
        if not line:
            continue
        x = line.split('.')
        n, s = int(x[0].strip()), x[1].strip()
        print('"""\n%s. %s\n""",' % (n, s))

def check(data, key, res):
    s = 0
    for k in data[key].keys():
        #print(k)
        q = k.split('.')[1]
        if not q.isdigit():
            continue
        #print(q)
        v = int(data[key][k])
        score = 1
        for i in range(0, 2):
            if int(q) in res[i]:
                s += i == 0 and v > 0 and score or i == 1 and v < 0 and score or 0
                break
    return s

def selftest(data, lang, with_print=None):
    key = _TEST_NAME
    results = _RESULTS[lang]

    out = []
    r = {}
    for k in sorted(results.keys()):
        if not k in r:
            r[k] = 0
        x = check(data, key, (results[k][0][2], results[k][1][2]))
        if with_print:
            print(x)
        r[k] += x

    for k in sorted(r.keys()):
        rp = '%s.R%s' % (key, k)
        if rp in data[key]:
            x = int(data[key].get(rp, '0'))
            if r[k] == x:
                out.append('OK')
            else:
                out.append('Error %s [%s:%s]' % (rp, r[k], x))
        else:
            out.append(NO_RESULTS)

    is_ok, is_error = 1, 0
    for s in out:
        if s.startswith('OK'):
            pass
        elif s.startswith('Error'):
            is_ok = 0
            is_error = 1
            if with_print or IsWithPrintErrors:
                print(key, s)
            break
        else:
            is_ok = 0
            break

    return is_ok and 'OK' or is_error and 'Error' or NO_RESULTS
